/**
 * @description       : This class contains the response parser method for Uptiq AI Agent Response Parser Apex class.
 * @author            : Supriyo Seni
 * @group             : Parser class
 * @last modified on  : 06-19-2025
 * @last modified by  : Supriyo Seni
**/
public inherited sharing class UptiqAIAgentResponseParser {

    /**
    * @description | This class is used to parse the response from Uptiq AI Agent
    **/
    public class RootResponseWrapper {
        public String executionId;             // Unique identifier for the AI execution instance
        public String aiPersonaId;             // Identifier for the AI persona used
        public String conversationId;          // ID of the conversation/session
        public OutputWrapper output;           // Output wrapper object containing the result
    }
    
    /**
    * @description | This class is used to wrap the output of the Uptiq AI Agent response
    **/
    public class OutputWrapper {
        public String type;                    // Type of output (e.g., text, action)
        public String text;                    // Main text response from AI
        public List<Object> formatVariables;   // List of any dynamic variables used in response
        public String rawText;                 // Raw JSON string (stringified response body)
        public String state;                   // Current state of the conversation or logic
        public Map<String, Object> icLoopIndexes; // Loop index values if present
        public Map<String, Object> icIntents;      // AI intents identified during conversation
    }
    
    /**
    * @description | This class is used to wrap the embedded response of the Uptiq AI Agent
    **/
    public class EmbeddedResponseWrapper {
        public String id;                      // Unique ID of the embedded response
        public String response;                // Stringified list of RuleEvaluationWrapper
        public String executionStatus;         // Status of execution (e.g., SUCCESS or FAILURE)
        public String createdDate;             // Date when the response was created
        public String processingTime;          // Time taken to process the request
    }
    
    /**
    * @description | This class is used to wrap the rule evaluation response of the Uptiq AI Agent
    **/
    public class RuleEvaluationWrapper {
        public String ruleId;                  // Unique identifier for the rule
        public String ruleDescription;         // Description of the rule logic
        public String result;                  // Result of the rule evaluation (e.g., pass/fail)
        public String reasoningAi;             // Explanation generated by AI
        public String relatedDocument;         // Reference to a related document if any
    }

    /**
    * @description | This class is used to wrap the parsed result of the Uptiq AI Agent response
    **/
    public class ParsedResultWrapper {
        public String id;                                      // ID from EmbeddedResponseWrapper
        public String executionStatus;                         // Status of overall response
        public String errorMessage;                            // Error message if any
        public List<RuleEvaluationWrapper> ruleEvaluations;    // List of evaluated rules
    }

    /**
    * @description | This method is used to parse the rules from the Uptiq AI Agent response
    * @author Supriyo Seni | 06-13-2025 
    * @param jsonString - The JSON string returned by the AI agent
    * @return ParsedResultWrapper - The parsed object containing rule evaluations and status
    **/
    public static ParsedResultWrapper parseRules(String jsonString) {
        // Replace all "_id" keys with "id" to ensure proper Apex deserialization
        jsonString = jsonString.replace(UptiqAIConstants.UNDERSCORE_ID, UptiqAIConstants.ID_STRING);
        
        // Initialize the wrapper object to return
        ParsedResultWrapper resultInst = new ParsedResultWrapper();
        
        // Deserialize the input JSON into RootResponseWrapper
        RootResponseWrapper rootWrapperInst = (RootResponseWrapper) JSON.deserialize(jsonString, RootResponseWrapper.class);
        
        // If rawText (embedded JSON) is missing, return failure with a generic error message
        if(rootWrapperInst?.output?.rawText == null){
            resultInst.executionStatus = UptiqAIConstants.FAILURE;
            resultInst.errorMessage = UptiqAIConstants.GENERIC_ERROR_MESSAGE;
            return resultInst;
        }

        // Deserialize rawText string into EmbeddedResponseWrapper
        EmbeddedResponseWrapper embeddedInst = (EmbeddedResponseWrapper) JSON.deserialize(rootWrapperInst.output.rawText, EmbeddedResponseWrapper.class);
        
        // Set execution status and ID in the result wrapper
        resultInst.executionStatus = embeddedInst.executionStatus;
        resultInst.id = embeddedInst.id;

        // If execution is successful, deserialize the rule evaluations and set them in result
        if(embeddedInst.executionStatus == UptiqAIConstants.SUCCESS){
            List<RuleEvaluationWrapper> rulesWrapperList = (List<RuleEvaluationWrapper>) JSON.deserialize(embeddedInst.response, List<RuleEvaluationWrapper>.class);
            resultInst.ruleEvaluations = rulesWrapperList;
            return resultInst;
        }

        // In case of failure, store the response string as an error message
        resultInst.errorMessage = embeddedInst.response;
        return resultInst;
    }
}